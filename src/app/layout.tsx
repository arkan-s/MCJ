import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import ReactQueryProvider from "@/hooks/reactQuery/ReactQuery";
import { getQueryClient } from "@/lib/getQueryClient";
import { dehydrate, HydrationBoundary } from "@tanstack/react-query";
import { branch, department, level, position } from "@/utils/fetchData";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "My Career Journey - Noodle",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {

  const queryClient = getQueryClient();

  // Prefetch your data here!
  await queryClient.prefetchQuery({
    queryKey: ["cabang"], 
    queryFn: branch
  });

  await queryClient.prefetchQuery({
    queryKey: ["department"], 
    queryFn: department
  });

  await queryClient.prefetchQuery({
    queryKey: ["position"], 
    queryFn: position
  });

  await queryClient.prefetchQuery({
    queryKey: ["level"], 
    queryFn: level
  });

  const dehydratedState = dehydrate(queryClient);

  return (
    <html lang="en" className="md:h-screen">
      <body className="flex flex-col h-full">
        <ReactQueryProvider dehydratedState={dehydratedState}>
          <HydrationBoundary state={dehydratedState}>
            {children}
          </HydrationBoundary>
        </ReactQueryProvider>
      </body>
    </html>
  );

}